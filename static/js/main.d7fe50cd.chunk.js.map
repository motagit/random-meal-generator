{"version":3,"sources":["App.js","index.js"],"names":["App","useState","recipe","setRecipe","loading","setLoading","data","setData","console","log","getMeals","a","fetch","response","json","meals","error","getIngredients","ingredientArray","i","ingredient","String","trimEnd","push","className","id","onClick","class","color","size","cssOverride","margin","strMeal","width","height","src","strMealThumb","alt","instructionArray","match","split","getInstructions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAoFeA,MAhFf,WAAgB,IAAD,IACb,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACAC,QAAQC,IAAIP,GAEZ,IAAMQ,EAAQ,uCAAG,8BAAAC,EAAA,sEAEbN,GAAW,GAFE,SAGUO,MACrB,sDAJW,cAGPC,EAHO,gBAMMA,EAASC,OANf,OAMPA,EANO,OAObP,EAAQO,EAAKC,OACbP,QAAQC,IAAIH,GARC,kDAUbE,QAAQQ,MAAR,MAVa,yBAYbb,GAAU,GACVc,IACAZ,GAAW,GAdE,6EAAH,qDAkBRY,EAAiB,WACrB,IAAIC,EAAkB,GACtB,GAAIhB,EACF,IAAK,IAAIiB,EAAI,EAAGA,GAAK,GAAIA,IACvB,GAAsC,IAAjCb,EAAK,GAAG,gBAAkBa,IAA6C,MAAhCb,EAAK,GAAG,gBAAkBa,GAAY,CAChF,IAAIC,EAAaC,OAAOf,EAAK,GAAG,aAAea,GAAGG,UAAY,IAAMhB,EAAK,GAAG,gBAAkBa,IAC9FD,EAAgBK,KAAK,6BAAaH,GAAJD,IAIpC,OAAQD,GAaV,OACE,sCACEhB,GAAU,oBAAIsB,UAAU,YAAd,iCACVtB,GAAU,oBAAIsB,UAAU,WAAd,8DAEZ,wBAAQA,UAAWtB,EAAS,YAAc,iBAAkBuB,GAAG,aAAaC,QAAS,kBAAMhB,KAA3F,mCACA,qBAAKc,UAAU,YAAf,SACGtB,IACEE,EAgBC,qBAAKuB,MAAM,UAAX,SACE,cAAC,IAAD,CAAYC,MAAM,UAAUxB,QAASA,EAASyB,KAAM,IAAKC,YAAa,CAACC,OAAQ,cAhBjF,qCACE,uCAAKzB,EAAK,UAAV,aAAK,EAAS0B,UACd,sBAAKR,UAAU,SAAf,UACE,qBAAKC,GAAG,QAAQQ,MAAO,IAAKC,OAAQ,IAAKC,IAAK7B,EAAK,GAAG8B,aAAcC,IAAG,UAAE/B,EAAK,UAAP,aAAE,EAAS0B,UAClF,sBAAKR,UAAU,cAAf,UACE,6CACE,6BAAKP,YAGX,sBAAKO,UAAU,sBAAf,UACE,8CACA,4BA9BY,WACtB,IAAIc,EAAmB,GAMvB,OALIpC,GACEI,EAAK,GAAL,gBAA2BiC,MAAM,SACnCD,EAAmBhC,EAAK,GAAL,gBAA2BkC,SAG1CF,EAuBMG,kBCnElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7fe50cd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport './App.scss';\n\nfunction App() {\n  const [recipe, setRecipe] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  console.log(recipe);\n\n  const getMeals = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        \"https://www.themealdb.com/api/json/v1/1/random.php\"\n      );\n      const json = await response.json();\n      setData(json.meals);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setRecipe(true);\n      getIngredients();\n      setLoading(false);\n    }\n  };\n\n  const getIngredients = () => {\n    let ingredientArray = [];\n    if (recipe) {\n      for (var i = 1; i <= 20; i++) {\n        if ((data[0]['strIngredient' + i]) != \"\" && data[0]['strIngredient' + i] != null) {\n          let ingredient = String(data[0]['strMeasure' + i].trimEnd() + \" \" + data[0]['strIngredient' + i]);\n          ingredientArray.push(<li key={i}>{ingredient}</li>);\n        }\n      }\n    }\n    return (ingredientArray);\n  }\n\n  const getInstructions = () => {\n    let instructionArray = [];\n    if (recipe) {\n      if (data[0]['strInstructions'].match(/\\n/g)) {\n        instructionArray = data[0]['strInstructions'].split();\n      }\n    }\n    return (instructionArray);\n  }\n\n  return (\n    <>\n    {!recipe && <h1 className=\"mainTitle\">It's cooking time!</h1>}\n    {!recipe && <h2 className=\"subTitle\">click in the button below to get a random recipe</h2>}\n\n    <button className={recipe ? \"topButton\" : \"centeredButton\"} id=\"mainButton\" onClick={() => getMeals()}>get meal ðŸ˜‹</button> \n    <div className=\"container\">\n      {recipe && ( \n        !loading ? (\n          <>\n            <h1>{data[0]?.strMeal}</h1>\n            <div className=\"column\">\n              <img id=\"image\" width={340} height={340} src={data[0].strMealThumb} alt={data[0]?.strMeal}/>\n              <div className=\"ingredients\">\n                <h3>Ingredients</h3>\n                  <ul>{getIngredients()}</ul>\n              </div>\n            </div>\n            <div className=\"instructions column\">\n              <h3>Instructions</h3>\n              <p>{getInstructions()}</p>\n            </div>\n          </>\n        ) : (\n          <div class=\"loading\">\n            <MoonLoader color='#7c0a02' loading={loading} size={100} cssOverride={{margin: '0 auto'}} />\n          </div>\n        ))}\n    </div>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}